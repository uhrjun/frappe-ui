const html = '<h1 id="utilities" tabindex="-1">Utilities <a class="header-anchor" href="#utilities" aria-hidden="true">#</a></h1>\n<p>Some common utilities that are useful in building frontend apps.</p>\n<h2 id="debounce" tabindex="-1">debounce <a class="header-anchor" href="#debounce" aria-hidden="true">#</a></h2>\n<p>Creates a function that will run only once in the specified number of wait time\n(milliseconds). In the following example, if you run <code>debouncedInput</code> function\nevery time the user presses a key, it will run only once in every <code>500ms</code>.</p>\n<pre><code class="language-js"><div class="htw-relative htw-not-prose __histoire-code"><div class="htw-absolute htw-top-0 htw-right-0 htw-text-xs htw-text-white/40">js</div><pre class="shiki github-dark" style="background-color: #0d1117"><code><span class="line"><span style="color: #FF7B72">import</span><span style="color: #C9D1D9"> { debounce } </span><span style="color: #FF7B72">from</span><span style="color: #C9D1D9"> </span><span style="color: #A5D6FF">&#39;frappe-ui&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #FF7B72">function</span><span style="color: #C9D1D9"> </span><span style="color: #D2A8FF">onInput</span><span style="color: #C9D1D9">(</span><span style="color: #FFA657">e</span><span style="color: #C9D1D9">) {</span></span>\n<span class="line"><span style="color: #C9D1D9">  </span><span style="color: #8B949E">// do something with input event</span></span>\n<span class="line"><span style="color: #C9D1D9">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #FF7B72">let</span><span style="color: #C9D1D9"> debouncedInput </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #D2A8FF">debounce</span><span style="color: #C9D1D9">(onInput, </span><span style="color: #79C0FF">500</span><span style="color: #C9D1D9">)</span></span>\n<span class="line"></span></code></pre></div></code></pre>\n<h2 id="filetobase64" tabindex="-1">fileToBase64 <a class="header-anchor" href="#filetobase64" aria-hidden="true">#</a></h2>\n<p>This function will return the base64 string of a\n<a href="https://developer.mozilla.org/en-US/docs/Web/API/File_API" target="_blank">File object</a>.</p>\n<pre><code class="language-js"><div class="htw-relative htw-not-prose __histoire-code"><div class="htw-absolute htw-top-0 htw-right-0 htw-text-xs htw-text-white/40">js</div><pre class="shiki github-dark" style="background-color: #0d1117"><code><span class="line"><span style="color: #FF7B72">import</span><span style="color: #C9D1D9"> { fileToBase64 } </span><span style="color: #FF7B72">from</span><span style="color: #C9D1D9"> </span><span style="color: #A5D6FF">&#39;frappe-ui&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #FF7B72">let</span><span style="color: #C9D1D9"> base64 </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #D2A8FF">fileToBase64</span><span style="color: #C9D1D9">(file) </span><span style="color: #8B949E">// file must be an instance of File</span></span>\n<span class="line"></span></code></pre></div></code></pre>\n<h2 id="pagemeta" tabindex="-1">pageMeta <a class="header-anchor" href="#pagemeta" aria-hidden="true">#</a></h2>\n<p>This is a plugin that can be used to update the <code>document.title</code> reactively as\nthe page changes.</p>\n<p>Register the plugin in your <code>main.js</code> file.</p>\n<pre><code class="language-js"><div class="htw-relative htw-not-prose __histoire-code"><div class="htw-absolute htw-top-0 htw-right-0 htw-text-xs htw-text-white/40">js</div><pre class="shiki github-dark" style="background-color: #0d1117"><code><span class="line"><span style="color: #FF7B72">import</span><span style="color: #C9D1D9"> { pageMetaPlugin } </span><span style="color: #FF7B72">from</span><span style="color: #C9D1D9"> </span><span style="color: #A5D6FF">&#39;frappe-ui&#39;</span></span>\n<span class="line"><span style="color: #8B949E">// ...</span></span>\n<span class="line"><span style="color: #C9D1D9">app.</span><span style="color: #D2A8FF">use</span><span style="color: #C9D1D9">(pageMetaPlugin)</span></span>\n<span class="line"></span></code></pre></div></code></pre>\n<p>Now, in your page component, declare the <code>pageMeta</code> function. It must return an\nobject with <code>title</code> and (<code>icon</code> or <code>emoji</code>) properties. The <code>pageMeta</code> function\nbehaves like a computed property, if there are reactive dependences that change,\n<code>document.title</code> will also change accordingly.</p>\n<p><strong>Page.vue</strong></p>\n<pre><code class="language-vue"><div class="htw-relative htw-not-prose __histoire-code"><div class="htw-absolute htw-top-0 htw-right-0 htw-text-xs htw-text-white/40">vue</div><pre class="shiki github-dark" style="background-color: #0d1117"><code><span class="line"><span style="color: #C9D1D9">&lt;</span><span style="color: #7EE787">template</span><span style="color: #C9D1D9">&gt;...&lt;/</span><span style="color: #7EE787">template</span><span style="color: #C9D1D9">&gt;</span></span>\n<span class="line"><span style="color: #C9D1D9">&lt;</span><span style="color: #7EE787">script</span><span style="color: #C9D1D9">&gt;</span></span>\n<span class="line"><span style="color: #FF7B72">export</span><span style="color: #FFA657"> </span><span style="color: #FF7B72">default</span><span style="color: #FFA657"> {</span></span>\n<span class="line"><span style="color: #FFA657">    </span><span style="color: #FF7B72">...</span></span>\n<span class="line"><span style="color: #C9D1D9">    </span><span style="color: #D2A8FF">pageMeta</span><span style="color: #C9D1D9">() {</span></span>\n<span class="line"><span style="color: #C9D1D9">        return {</span></span>\n<span class="line"><span style="color: #C9D1D9">            title: </span><span style="color: #A5D6FF">&#39;Page Title&#39;</span><span style="color: #C9D1D9">,</span></span>\n<span class="line"><span style="color: #C9D1D9">            icon: </span><span style="color: #A5D6FF">&#39;&lt;link to .png, .ico file&gt;&#39;</span><span style="color: #C9D1D9">,</span></span>\n<span class="line"><span style="color: #C9D1D9">            emoji: </span><span style="color: #A5D6FF">&#39;ðŸŒˆ&#39;</span></span>\n<span class="line"><span style="color: #C9D1D9">        }</span></span>\n<span class="line"><span style="color: #C9D1D9">    </span><span style="color: #FFA657">}</span></span>\n<span class="line"><span style="color: #C9D1D9">}</span></span>\n<span class="line"><span style="color: #C9D1D9">&lt;/</span><span style="color: #7EE787">script</span><span style="color: #C9D1D9">&gt;</span></span>\n<span class="line"></span></code></pre></div></code></pre>\n';
const frontmatter = {};
const relativePath = "docs/other/Utilities.story.md";
export {
  frontmatter,
  html,
  relativePath
};
