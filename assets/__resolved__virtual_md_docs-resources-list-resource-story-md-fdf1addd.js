const html = '<h1 id="list-resource" tabindex="-1">List Resource <a class="header-anchor" href="#list-resource" aria-hidden="true">#</a></h1>\n<p>List Resource is a wrapper on top of <a href="/story/docs-resources-resource-story-js" data-route="true">Resource</a> for working\nwith lists. This feature only works with a Frappe Framework backend as of now.</p>\n<h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-hidden="true">#</a></h2>\n<p>A list resource knows how to fetch records of a DocType from a Frappe Framework\nbackend so there is no need to specify the url. Instead you only define\n<code>doctype</code>, <code>fields</code>, <code>filters</code>, etc. You also get methods like <code>next()</code>,\n<code>setValue()</code>, etc.</p>\n<pre><code class="language-vue"><div class="htw-relative htw-not-prose __histoire-code"><div class="htw-absolute htw-top-0 htw-right-0 htw-text-xs htw-text-white/40">vue</div><pre class="shiki github-dark" style="background-color: #0d1117"><code><span class="line"><span style="color: #C9D1D9">&lt;</span><span style="color: #7EE787">template</span><span style="color: #C9D1D9">&gt;</span></span>\n<span class="line"><span style="color: #C9D1D9">  &lt;</span><span style="color: #7EE787">div</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">class</span><span style="color: #C9D1D9">=</span><span style="color: #A5D6FF">&quot;space-y-4&quot;</span><span style="color: #C9D1D9">&gt;</span></span>\n<span class="line"><span style="color: #C9D1D9">    &lt;</span><span style="color: #7EE787">div</span></span>\n<span class="line"><span style="color: #C9D1D9">      </span><span style="color: #79C0FF">class</span><span style="color: #C9D1D9">=</span><span style="color: #A5D6FF">&quot;flex items-center justify-between&quot;</span></span>\n<span class="line"><span style="color: #C9D1D9">      </span><span style="color: #79C0FF">v-for</span><span style="color: #C9D1D9">=</span><span style="color: #A5D6FF">&quot;todo in todos.data&quot;</span></span>\n<span class="line"><span style="color: #C9D1D9">      </span><span style="color: #79C0FF">:key</span><span style="color: #C9D1D9">=</span><span style="color: #A5D6FF">&quot;todo.name&quot;</span></span>\n<span class="line"><span style="color: #C9D1D9">    &gt;</span></span>\n<span class="line"><span style="color: #C9D1D9">      &lt;</span><span style="color: #7EE787">div</span><span style="color: #C9D1D9">&gt;</span></span>\n<span class="line"><span style="color: #C9D1D9">        {{ todo.description }}</span></span>\n<span class="line"><span style="color: #C9D1D9">      &lt;/</span><span style="color: #7EE787">div</span><span style="color: #C9D1D9">&gt;</span></span>\n<span class="line"><span style="color: #C9D1D9">      &lt;</span><span style="color: #FFA198; font-style: italic">Badge</span><span style="color: #C9D1D9">&gt;{{ todo.status }}&lt;/</span><span style="color: #FFA198; font-style: italic">Badge</span><span style="color: #C9D1D9">&gt;</span></span>\n<span class="line"><span style="color: #C9D1D9">    &lt;/</span><span style="color: #7EE787">div</span><span style="color: #C9D1D9">&gt;</span></span>\n<span class="line"><span style="color: #C9D1D9">  &lt;/</span><span style="color: #7EE787">div</span><span style="color: #C9D1D9">&gt;</span></span>\n<span class="line"><span style="color: #C9D1D9">  &lt;</span><span style="color: #7EE787">Button</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">@click</span><span style="color: #C9D1D9">=</span><span style="color: #A5D6FF">&quot;todos.next()&quot;</span><span style="color: #C9D1D9">&gt; Next Page &lt;/</span><span style="color: #7EE787">Button</span><span style="color: #C9D1D9">&gt;</span></span>\n<span class="line"><span style="color: #C9D1D9">&lt;/</span><span style="color: #7EE787">template</span><span style="color: #C9D1D9">&gt;</span></span>\n<span class="line"><span style="color: #C9D1D9">&lt;</span><span style="color: #7EE787">script</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">setup</span><span style="color: #C9D1D9">&gt;</span></span>\n<span class="line"><span style="color: #FF7B72">import</span><span style="color: #C9D1D9"> { createListResource } </span><span style="color: #FF7B72">from</span><span style="color: #C9D1D9"> </span><span style="color: #A5D6FF">&#39;frappe-ui&#39;</span></span>\n<span class="line"><span style="color: #FF7B72">let</span><span style="color: #C9D1D9"> todos </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #D2A8FF">createListResource</span><span style="color: #C9D1D9">({</span></span>\n<span class="line"><span style="color: #C9D1D9">  doctype: </span><span style="color: #A5D6FF">&#39;ToDo&#39;</span><span style="color: #C9D1D9">,</span></span>\n<span class="line"><span style="color: #C9D1D9">  fields: [</span><span style="color: #A5D6FF">&#39;name&#39;</span><span style="color: #C9D1D9">, </span><span style="color: #A5D6FF">&#39;description&#39;</span><span style="color: #C9D1D9">, </span><span style="color: #A5D6FF">&#39;status&#39;</span><span style="color: #C9D1D9">],</span></span>\n<span class="line"><span style="color: #C9D1D9">  orderBy: </span><span style="color: #A5D6FF">&#39;creation desc&#39;</span><span style="color: #C9D1D9">,</span></span>\n<span class="line"><span style="color: #C9D1D9">  start: </span><span style="color: #79C0FF">0</span><span style="color: #C9D1D9">,</span></span>\n<span class="line"><span style="color: #C9D1D9">  pageLength: </span><span style="color: #79C0FF">5</span><span style="color: #C9D1D9">,</span></span>\n<span class="line"><span style="color: #C9D1D9">})</span></span>\n<span class="line"><span style="color: #C9D1D9">todos.</span><span style="color: #D2A8FF">fetch</span><span style="color: #C9D1D9">()</span></span>\n<span class="line"><span style="color: #C9D1D9">&lt;/</span><span style="color: #7EE787">script</span><span style="color: #C9D1D9">&gt;</span></span>\n<span class="line"></span></code></pre></div></code></pre>\n<h2 id="options-api" tabindex="-1">Options API <a class="header-anchor" href="#options-api" aria-hidden="true">#</a></h2>\n<p>You can also define resources if you are using Options API. You need to register\nthe <code>resourcesPlugin</code> first.</p>\n<p><strong>main.js</strong></p>\n<pre><code class="language-js"><div class="htw-relative htw-not-prose __histoire-code"><div class="htw-absolute htw-top-0 htw-right-0 htw-text-xs htw-text-white/40">js</div><pre class="shiki github-dark" style="background-color: #0d1117"><code><span class="line"><span style="color: #FF7B72">import</span><span style="color: #C9D1D9"> { resourcesPlugin } </span><span style="color: #FF7B72">from</span><span style="color: #C9D1D9"> </span><span style="color: #A5D6FF">&#39;frappe-ui&#39;</span></span>\n<span class="line"><span style="color: #C9D1D9">app.</span><span style="color: #D2A8FF">use</span><span style="color: #C9D1D9">(resourcesPlugin)</span></span>\n<span class="line"></span></code></pre></div></code></pre>\n<p>In your .vue file, you can declare all your resources under the resources key as\nfunctions. The resource object will be available on <code>this.$resources.[name]</code>. In\nthe following example, <code>this.$resources.todos</code> is the resource object.</p>\n<p><strong>Component.vue</strong></p>\n<pre><code class="language-vue"><div class="htw-relative htw-not-prose __histoire-code"><div class="htw-absolute htw-top-0 htw-right-0 htw-text-xs htw-text-white/40">vue</div><pre class="shiki github-dark" style="background-color: #0d1117"><code><span class="line"><span style="color: #C9D1D9">&lt;</span><span style="color: #7EE787">script</span><span style="color: #C9D1D9">&gt;</span></span>\n<span class="line"><span style="color: #FF7B72">export</span><span style="color: #FFA657"> </span><span style="color: #FF7B72">default</span><span style="color: #FFA657"> {</span></span>\n<span class="line"><span style="color: #FFA657">  </span><span style="color: #C9D1D9">resources: {</span></span>\n<span class="line"><span style="color: #C9D1D9">    </span><span style="color: #D2A8FF">todos</span><span style="color: #C9D1D9">() {</span></span>\n<span class="line"><span style="color: #C9D1D9">      </span><span style="color: #FF7B72">return</span><span style="color: #C9D1D9"> {</span></span>\n<span class="line"><span style="color: #C9D1D9">        type: </span><span style="color: #A5D6FF">&#39;list&#39;</span><span style="color: #C9D1D9">,</span></span>\n<span class="line"><span style="color: #C9D1D9">        doctype: </span><span style="color: #A5D6FF">&#39;ToDo&#39;</span><span style="color: #C9D1D9">,</span></span>\n<span class="line"><span style="color: #C9D1D9">        fields: [</span><span style="color: #A5D6FF">&#39;name&#39;</span><span style="color: #C9D1D9">, </span><span style="color: #A5D6FF">&#39;description&#39;</span><span style="color: #C9D1D9">, </span><span style="color: #A5D6FF">&#39;status&#39;</span><span style="color: #C9D1D9">],</span></span>\n<span class="line"><span style="color: #C9D1D9">        orderBy: </span><span style="color: #A5D6FF">&#39;creation desc&#39;</span><span style="color: #C9D1D9">,</span></span>\n<span class="line"><span style="color: #C9D1D9">        start: </span><span style="color: #79C0FF">0</span><span style="color: #C9D1D9">,</span></span>\n<span class="line"><span style="color: #C9D1D9">        pageLength: </span><span style="color: #79C0FF">5</span><span style="color: #C9D1D9">,</span></span>\n<span class="line"><span style="color: #C9D1D9">        auto: </span><span style="color: #79C0FF">true</span><span style="color: #C9D1D9">,</span></span>\n<span class="line"><span style="color: #C9D1D9">      }</span></span>\n<span class="line"><span style="color: #C9D1D9">    },</span></span>\n<span class="line"><span style="color: #C9D1D9">  }</span><span style="color: #FFA657">,</span></span>\n<span class="line"><span style="color: #FFA657">}</span></span>\n<span class="line"><span style="color: #C9D1D9">&lt;/</span><span style="color: #7EE787">script</span><span style="color: #C9D1D9">&gt;</span></span>\n<span class="line"></span></code></pre></div></code></pre>\n<h2 id="list-of-options-and-api" tabindex="-1">List of Options and API <a class="header-anchor" href="#list-of-options-and-api" aria-hidden="true">#</a></h2>\n<p>Here is the list of all options and APIs that are available on a list resource.</p>\n<h3 id="options" tabindex="-1">Options <a class="header-anchor" href="#options" aria-hidden="true">#</a></h3>\n<pre><code class="language-js"><div class="htw-relative htw-not-prose __histoire-code"><div class="htw-absolute htw-top-0 htw-right-0 htw-text-xs htw-text-white/40">js</div><pre class="shiki github-dark" style="background-color: #0d1117"><code><span class="line"><span style="color: #FF7B72">let</span><span style="color: #C9D1D9"> todos </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #D2A8FF">createListResource</span><span style="color: #C9D1D9">({</span></span>\n<span class="line"><span style="color: #C9D1D9">    </span><span style="color: #8B949E">// name of the doctype</span></span>\n<span class="line"><span style="color: #C9D1D9">    doctype: </span><span style="color: #A5D6FF">&#39;ToDo&#39;</span><span style="color: #C9D1D9">,</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C9D1D9">    </span><span style="color: #8B949E">// list of fields</span></span>\n<span class="line"><span style="color: #C9D1D9">    fields: [</span><span style="color: #A5D6FF">&#39;name&#39;</span><span style="color: #C9D1D9">, </span><span style="color: #A5D6FF">&#39;description&#39;</span><span style="color: #C9D1D9">, </span><span style="color: #A5D6FF">&#39;status&#39;</span><span style="color: #C9D1D9">, </span><span style="color: #FF7B72">...</span><span style="color: #C9D1D9">],</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C9D1D9">    </span><span style="color: #8B949E">// object of filters to apply</span></span>\n<span class="line"><span style="color: #C9D1D9">    filters: {</span></span>\n<span class="line"><span style="color: #C9D1D9">        status: </span><span style="color: #A5D6FF">&#39;Open&#39;</span></span>\n<span class="line"><span style="color: #C9D1D9">    },</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C9D1D9">    </span><span style="color: #8B949E">// the order in which records must be sorted</span></span>\n<span class="line"><span style="color: #C9D1D9">    orderBy: </span><span style="color: #A5D6FF">&#39;creation desc&#39;</span><span style="color: #C9D1D9">,</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C9D1D9">    </span><span style="color: #8B949E">// index from which records should be fetched</span></span>\n<span class="line"><span style="color: #C9D1D9">    </span><span style="color: #8B949E">// default value is 0</span></span>\n<span class="line"><span style="color: #C9D1D9">    start: </span><span style="color: #79C0FF">0</span><span style="color: #C9D1D9">,</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C9D1D9">    </span><span style="color: #8B949E">// number of records to fetch in a single request</span></span>\n<span class="line"><span style="color: #C9D1D9">    </span><span style="color: #8B949E">// default value is 20</span></span>\n<span class="line"><span style="color: #C9D1D9">    pageLength: </span><span style="color: #79C0FF">20</span><span style="color: #C9D1D9">,</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C9D1D9">    </span><span style="color: #8B949E">// parent doctype when you are fetching records of a child doctype</span></span>\n<span class="line"><span style="color: #C9D1D9">    parent: </span><span style="color: #79C0FF">null</span><span style="color: #C9D1D9">,</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C9D1D9">    </span><span style="color: #8B949E">// set to 1 to enable debugging of list query</span></span>\n<span class="line"><span style="color: #C9D1D9">    debug: </span><span style="color: #79C0FF">0</span><span style="color: #C9D1D9">,</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C9D1D9">    </span><span style="color: #8B949E">// cache key to cache the resource</span></span>\n<span class="line"><span style="color: #C9D1D9">    </span><span style="color: #8B949E">// can be a string</span></span>\n<span class="line"><span style="color: #C9D1D9">    cache: </span><span style="color: #A5D6FF">&#39;todos&#39;</span><span style="color: #C9D1D9">,</span></span>\n<span class="line"><span style="color: #C9D1D9">    </span><span style="color: #8B949E">// or an array that can be serialized</span></span>\n<span class="line"><span style="color: #C9D1D9">    cache: [</span><span style="color: #A5D6FF">&#39;todos&#39;</span><span style="color: #C9D1D9">, </span><span style="color: #A5D6FF">&#39;faris@frappe.io&#39;</span><span style="color: #C9D1D9">],</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C9D1D9">    </span><span style="color: #8B949E">// default value for url is &quot;frappe.client.get_list&quot;</span></span>\n<span class="line"><span style="color: #C9D1D9">    </span><span style="color: #8B949E">// specify url if you want to use a custom API method</span></span>\n<span class="line"><span style="color: #C9D1D9">    url: </span><span style="color: #A5D6FF">&#39;todo_app.api.get_todos&#39;</span><span style="color: #C9D1D9">,</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C9D1D9">    </span><span style="color: #8B949E">// make the first request automatically</span></span>\n<span class="line"><span style="color: #C9D1D9">    auto: </span><span style="color: #79C0FF">true</span><span style="color: #C9D1D9">,</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C9D1D9">    </span><span style="color: #8B949E">// events</span></span>\n<span class="line"><span style="color: #C9D1D9">    </span><span style="color: #8B949E">// error can occur from failed request</span></span>\n<span class="line"><span style="color: #C9D1D9">    </span><span style="color: #D2A8FF">onError</span><span style="color: #C9D1D9">(</span><span style="color: #FFA657">error</span><span style="color: #C9D1D9">) {</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C9D1D9">    },</span></span>\n<span class="line"><span style="color: #C9D1D9">    </span><span style="color: #8B949E">// on successful response</span></span>\n<span class="line"><span style="color: #C9D1D9">    </span><span style="color: #D2A8FF">onSuccess</span><span style="color: #C9D1D9">(</span><span style="color: #FFA657">data</span><span style="color: #C9D1D9">) {</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C9D1D9">    },</span></span>\n<span class="line"><span style="color: #C9D1D9">    </span><span style="color: #8B949E">// transform data before setting it</span></span>\n<span class="line"><span style="color: #C9D1D9">    </span><span style="color: #D2A8FF">transform</span><span style="color: #C9D1D9">(</span><span style="color: #FFA657">data</span><span style="color: #C9D1D9">) {</span></span>\n<span class="line"><span style="color: #C9D1D9">      </span><span style="color: #FF7B72">for</span><span style="color: #C9D1D9"> (</span><span style="color: #FF7B72">let</span><span style="color: #C9D1D9"> d </span><span style="color: #FF7B72">of</span><span style="color: #C9D1D9"> data) {</span></span>\n<span class="line"><span style="color: #C9D1D9">        d.open </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">false</span></span>\n<span class="line"><span style="color: #C9D1D9">      }</span></span>\n<span class="line"><span style="color: #C9D1D9">      </span><span style="color: #FF7B72">return</span><span style="color: #C9D1D9"> data</span></span>\n<span class="line"><span style="color: #C9D1D9">    },</span></span>\n<span class="line"><span style="color: #C9D1D9">    </span><span style="color: #8B949E">// other events</span></span>\n<span class="line"><span style="color: #C9D1D9">    fetchOne: {</span></span>\n<span class="line"><span style="color: #C9D1D9">        </span><span style="color: #D2A8FF">onSuccess</span><span style="color: #C9D1D9">() {},</span></span>\n<span class="line"><span style="color: #C9D1D9">        </span><span style="color: #D2A8FF">onError</span><span style="color: #C9D1D9">() {}</span></span>\n<span class="line"><span style="color: #C9D1D9">    },</span></span>\n<span class="line"><span style="color: #C9D1D9">    insert: {</span></span>\n<span class="line"><span style="color: #C9D1D9">        </span><span style="color: #D2A8FF">onSuccess</span><span style="color: #C9D1D9">() {},</span></span>\n<span class="line"><span style="color: #C9D1D9">        </span><span style="color: #D2A8FF">onError</span><span style="color: #C9D1D9">() {}</span></span>\n<span class="line"><span style="color: #C9D1D9">    },</span></span>\n<span class="line"><span style="color: #C9D1D9">    delete: {</span></span>\n<span class="line"><span style="color: #C9D1D9">        </span><span style="color: #D2A8FF">onSuccess</span><span style="color: #C9D1D9">() {},</span></span>\n<span class="line"><span style="color: #C9D1D9">        </span><span style="color: #D2A8FF">onError</span><span style="color: #C9D1D9">() {}</span></span>\n<span class="line"><span style="color: #C9D1D9">    },</span></span>\n<span class="line"><span style="color: #C9D1D9">    setValue: {</span></span>\n<span class="line"><span style="color: #C9D1D9">        </span><span style="color: #D2A8FF">onSuccess</span><span style="color: #C9D1D9">() {},</span></span>\n<span class="line"><span style="color: #C9D1D9">        </span><span style="color: #D2A8FF">onError</span><span style="color: #C9D1D9">() {}</span></span>\n<span class="line"><span style="color: #C9D1D9">    },</span></span>\n<span class="line"><span style="color: #C9D1D9">    runDocMethod: {</span></span>\n<span class="line"><span style="color: #C9D1D9">        </span><span style="color: #D2A8FF">onSuccess</span><span style="color: #C9D1D9">() {},</span></span>\n<span class="line"><span style="color: #C9D1D9">        </span><span style="color: #D2A8FF">onError</span><span style="color: #C9D1D9">() {}</span></span>\n<span class="line"><span style="color: #C9D1D9">    },</span></span>\n<span class="line"><span style="color: #C9D1D9">})</span></span>\n<span class="line"></span></code></pre></div></code></pre>\n<h3 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-hidden="true">#</a></h3>\n<p>A list resource is made up of multiple individual resources. In our running\nexample, the resource object that fetches the list is at <code>todos.list</code>. So all\nthe <a href="/story/docs-resources-resource-story-js" data-route="true">properties of a resource</a> are available on this\nobject. Similarly, there are resources for <code>fetchOne</code>, <code>setValue</code>, <code>insert</code>,\n<code>delete</code>, and <code>runDocMethod</code>.</p>\n<pre><code class="language-js"><div class="htw-relative htw-not-prose __histoire-code"><div class="htw-absolute htw-top-0 htw-right-0 htw-text-xs htw-text-white/40">js</div><pre class="shiki github-dark" style="background-color: #0d1117"><code><span class="line"><span style="color: #FF7B72">let</span><span style="color: #C9D1D9"> todos </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #D2A8FF">createListResource</span><span style="color: #C9D1D9">({</span><span style="color: #FF7B72">...</span><span style="color: #C9D1D9">})</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C9D1D9">todos.data </span><span style="color: #8B949E">// data returned from request</span></span>\n<span class="line"><span style="color: #C9D1D9">todos.originalData </span><span style="color: #8B949E">// response data before being transformed</span></span>\n<span class="line"><span style="color: #C9D1D9">todos.</span><span style="color: #D2A8FF">reload</span><span style="color: #C9D1D9">() </span><span style="color: #8B949E">// reload the existing list</span></span>\n<span class="line"><span style="color: #C9D1D9">todos.</span><span style="color: #D2A8FF">next</span><span style="color: #C9D1D9">() </span><span style="color: #8B949E">// fetch the next page</span></span>\n<span class="line"><span style="color: #C9D1D9">todos.hasNextPage </span><span style="color: #8B949E">// whether there is next page to fetch</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #8B949E">// update list options</span></span>\n<span class="line"><span style="color: #C9D1D9">todos.</span><span style="color: #D2A8FF">update</span><span style="color: #C9D1D9">({</span></span>\n<span class="line"><span style="color: #C9D1D9">  fields: [</span><span style="color: #A5D6FF">&#39;*&#39;</span><span style="color: #C9D1D9">],</span></span>\n<span class="line"><span style="color: #C9D1D9">  filters: {</span></span>\n<span class="line"><span style="color: #C9D1D9">    status: </span><span style="color: #A5D6FF">&#39;Closed&#39;</span></span>\n<span class="line"><span style="color: #C9D1D9">  }</span></span>\n<span class="line"><span style="color: #C9D1D9">})</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C9D1D9">todos.list </span><span style="color: #8B949E">// list resource</span></span>\n<span class="line"><span style="color: #C9D1D9">todos.list.loading </span><span style="color: #8B949E">// true when data is being fetched</span></span>\n<span class="line"><span style="color: #C9D1D9">todos.list.error </span><span style="color: #8B949E">// error that occurred from making the request</span></span>\n<span class="line"><span style="color: #C9D1D9">todos.list.promise </span><span style="color: #8B949E">// promise object of the request, can be awaited</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #8B949E">// resource to fetch and update a single record in the list</span></span>\n<span class="line"><span style="color: #C9D1D9">todos.fetchOne</span></span>\n<span class="line"><span style="color: #8B949E">// pass the name of the record to fetch that record and update the list</span></span>\n<span class="line"><span style="color: #C9D1D9">todos.fetchOne.</span><span style="color: #D2A8FF">submit</span><span style="color: #C9D1D9">(name)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #8B949E">// resource to set value(s) for a single record in the list</span></span>\n<span class="line"><span style="color: #C9D1D9">todos.setValue</span></span>\n<span class="line"><span style="color: #C9D1D9">todos.setValue.</span><span style="color: #D2A8FF">submit</span><span style="color: #C9D1D9">({</span></span>\n<span class="line"><span style="color: #C9D1D9">    </span><span style="color: #8B949E">// id of the record</span></span>\n<span class="line"><span style="color: #C9D1D9">    name: </span><span style="color: #A5D6FF">&#39;&#39;</span><span style="color: #C9D1D9">,</span></span>\n<span class="line"><span style="color: #C9D1D9">    </span><span style="color: #8B949E">// field value pairs to set</span></span>\n<span class="line"><span style="color: #C9D1D9">    status: </span><span style="color: #A5D6FF">&#39;Closed&#39;</span><span style="color: #C9D1D9">,</span></span>\n<span class="line"><span style="color: #C9D1D9">    description: </span><span style="color: #A5D6FF">&#39;Updated description&#39;</span></span>\n<span class="line"><span style="color: #C9D1D9">})</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #8B949E">// resource to insert a new record in the list</span></span>\n<span class="line"><span style="color: #C9D1D9">todos.insert</span></span>\n<span class="line"><span style="color: #C9D1D9">todos.insert.</span><span style="color: #D2A8FF">submit</span><span style="color: #C9D1D9">({</span></span>\n<span class="line"><span style="color: #C9D1D9">    description: </span><span style="color: #A5D6FF">&#39;New todo&#39;</span></span>\n<span class="line"><span style="color: #C9D1D9">})</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #8B949E">// resource to delete a single record</span></span>\n<span class="line"><span style="color: #C9D1D9">todos.delete</span></span>\n<span class="line"><span style="color: #C9D1D9">todos.delete.</span><span style="color: #D2A8FF">submit</span><span style="color: #C9D1D9">(name)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #8B949E">// resource to run a doc method</span></span>\n<span class="line"><span style="color: #C9D1D9">todos.runDocMethod</span></span>\n<span class="line"><span style="color: #C9D1D9">todos.runDocMethod.</span><span style="color: #D2A8FF">submit</span><span style="color: #C9D1D9">({</span></span>\n<span class="line"><span style="color: #C9D1D9">    </span><span style="color: #8B949E">// name of the doc method</span></span>\n<span class="line"><span style="color: #C9D1D9">    method: </span><span style="color: #A5D6FF">&#39;send_email&#39;</span><span style="color: #C9D1D9">,</span></span>\n<span class="line"><span style="color: #C9D1D9">    </span><span style="color: #8B949E">// name of the record</span></span>\n<span class="line"><span style="color: #C9D1D9">    name: </span><span style="color: #A5D6FF">&#39;&#39;</span><span style="color: #C9D1D9">,</span></span>\n<span class="line"><span style="color: #C9D1D9">    </span><span style="color: #8B949E">// params to pass to the method</span></span>\n<span class="line"><span style="color: #C9D1D9">    email: </span><span style="color: #A5D6FF">&#39;test@example.com&#39;</span></span>\n<span class="line"><span style="color: #C9D1D9">})</span></span>\n<span class="line"></span></code></pre></div></code></pre>\n';
const frontmatter = {};
const relativePath = "docs/resources/List Resource.story.md";
export {
  frontmatter,
  html,
  relativePath
};
